{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, CLEAR_ERRORS } from './redux/constants/userConstants';\n\n// Register user \n\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/auth/signup', userData, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\n\n//Login\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/auth/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Load user\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('http://localhost:5000/auth/profile');\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_USER_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Clear errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CLEAR_ERRORS","register","userData","dispatch","type","config","headers","data","post","payload","user","error","response","message","login","email","password","loadUser","get","clearErrors"],"sources":["C:/Users/chath/Desktop/React projects/TravelMate_web/frontend/src/redux/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_REQUEST,LOGIN_SUCCESS,LOGIN_FAILURE,\r\n    REGISTER_USER_REQUEST,REGISTER_USER_SUCCESS,REGISTER_USER_FAILURE,\r\n    LOAD_USER_REQUEST,LOAD_USER_SUCCESS,LOAD_USER_FAILURE,\r\n    CLEAR_ERRORS\r\n    } from './redux/constants/userConstants';\r\n\r\n  // Register user \r\n\r\n  export const register =(userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({type: REGISTER_USER_REQUEST})\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('http://localhost:5000/auth/signup',userData, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: REGISTER_USER_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n  //Login\r\n  export const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({type: LOGIN_REQUEST})\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post('http://localhost:5000/auth/login',{ email, password}, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: LOGIN_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load user\r\nexport const loadUser =() => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({type: LOAD_USER_REQUEST})\r\n\r\n     \r\n        const {data} = await axios.get('http://localhost:5000/auth/profile')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: LOAD_USER_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear errors\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS,\r\n    })\r\n}\r\n  "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,aAAa,EAACC,aAAa,EAACC,aAAa,EACzCC,qBAAqB,EAACC,qBAAqB,EAACC,qBAAqB,EACjEC,iBAAiB,EAACC,iBAAiB,EAACC,iBAAiB,EACrDC,YAAY,QACL,iCAAiC;;AAE1C;;AAEA,OAAO,MAAMC,QAAQ,GAAGC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACvD,IAAI;IAEAA,QAAQ,CAAC;MAACC,IAAI,EAAEV;IAAqB,CAAC,CAAC;IAEvC,MAAMW,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,mCAAmC,EAACN,QAAQ,EAAEG,MAAM,CAAC;IAErFF,QAAQ,CAAC;MACLC,IAAI,EAAET,qBAAqB;MAC3Bc,OAAO,EAAEF,IAAI,CAACG;IAClB,CAAC,CAAC;EAEN,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLC,IAAI,EAAER,qBAAqB;MAC3Ba,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM;IACjC,CAAC,CAAC;EACN;AAEJ,CAAC;;AAIC;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOb,QAAQ,IAAK;EAC5D,IAAI;IAEAA,QAAQ,CAAC;MAACC,IAAI,EAAEb;IAAa,CAAC,CAAC;IAE/B,MAAMc,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IACD,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,kCAAkC,EAAC;MAAEO,KAAK;MAAEC;IAAQ,CAAC,EAAEX,MAAM,CAAC;IAE9FF,QAAQ,CAAC;MACLC,IAAI,EAAEZ,aAAa;MACnBiB,OAAO,EAAEF,IAAI,CAACG;IAClB,CAAC,CAAC;EAEN,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLC,IAAI,EAAEX,aAAa;MACnBgB,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,QAAQ,GAAEA,CAAA,KAAM,MAAOd,QAAQ,IAAK;EAC7C,IAAI;IAEAA,QAAQ,CAAC;MAACC,IAAI,EAAEP;IAAiB,CAAC,CAAC;IAGnC,MAAM;MAACU;IAAI,CAAC,GAAG,MAAMjB,KAAK,CAAC4B,GAAG,CAAC,oCAAoC,CAAC;IAEpEf,QAAQ,CAAC;MACLC,IAAI,EAAEN,iBAAiB;MACvBW,OAAO,EAAEF,IAAI,CAACG;IAClB,CAAC,CAAC;EAEN,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLC,IAAI,EAAEL,iBAAiB;MACvBU,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;;AAEA,OAAO,MAAMM,WAAW,GAAGA,CAAA,KAAM,MAAOhB,QAAQ,IAAK;EACjDA,QAAQ,CAAC;IACLC,IAAI,EAAEJ;EACV,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}