{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, CLEAR_ERRORS } from '../../constants/userConstants';\n\n// Register user \n\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('http://localhost:5000/auth/signup', userData);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\n\n//Login\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const res = await axios.post('http://localhost:5000/auth/login', {\n      email,\n      password\n    });\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        token: res.data.token,\n        user: res.data.user\n      }\n    });\n\n    // Save token and user data to localStorage\n    localStorage.setItem('token', res.data.token);\n    localStorage.setItem('user', JSON.stringify(res.data.user));\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Load user\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('http://localhost:5000/auth/profile');\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_USER_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Clear errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};\nexport const logout = () => dispatch => {\n  // Clear localStorage\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  dispatch({\n    type: 'LOGOUT'\n  });\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CLEAR_ERRORS","register","userData","dispatch","type","data","post","payload","user","error","response","message","login","email","password","res","token","localStorage","setItem","JSON","stringify","loadUser","get","clearErrors","logout","removeItem"],"sources":["C:/Users/chath/Desktop/React projects/TravelMate_web/frontend/src/redux/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_REQUEST,LOGIN_SUCCESS,LOGIN_FAILURE,\r\n    REGISTER_USER_REQUEST,REGISTER_USER_SUCCESS,REGISTER_USER_FAILURE,\r\n    LOAD_USER_REQUEST,LOAD_USER_SUCCESS,LOAD_USER_FAILURE,\r\n    CLEAR_ERRORS\r\n    } from '../../constants/userConstants';\r\n\r\n  // Register user \r\n\r\n  export const register =(userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({type: REGISTER_USER_REQUEST})\r\n\r\n\r\n        const {data} = await axios.post('http://localhost:5000/auth/signup',userData)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: REGISTER_USER_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n  //Login\r\n  export const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({type: LOGIN_REQUEST})\r\n\r\n       \r\n        const res = await axios.post('http://localhost:5000/auth/login',{ email, password});\r\n\r\n       \r\n\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: { token: res.data.token, user: res.data.user },\r\n        });\r\n\r\n          // Save token and user data to localStorage\r\n          localStorage.setItem('token', res.data.token);\r\n          localStorage.setItem('user', JSON.stringify(res.data.user));\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: LOGIN_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load user\r\nexport const loadUser =() => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({type: LOAD_USER_REQUEST})\r\n\r\n     \r\n        const {data} = await axios.get('http://localhost:5000/auth/profile')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: LOAD_USER_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear errors\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS,\r\n    })\r\n}\r\n  \r\nexport const logout = () => (dispatch) => {\r\n    // Clear localStorage\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n  \r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}